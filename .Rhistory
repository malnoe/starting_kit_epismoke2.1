print(paste0(i,"/",nb))
confusion_matrix <- table(Predicted = predict_current_former(data,step_model_current,seuil_current,step_model_former,seuil_former), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_current <- num_model_current
best_num_model_former <- num_model_former
best_seuil_current <- seuil_current
best_seuil_former <- seuil_former
}
}
}
num_model_former <- 1
}
}
return(c(best_accuracy,best_num_model_current,best_seuil_current,best_num_model_former,best_seuil_former))
}
hyperparametrage_current_former(data_train2,modeles_current,list(0.45,0.475,0.5,0525,0.55),modeles_former,list(0.45,0.475,0.5,0525,0.55))
# Current puis never
predict_current_never<- function(data,step_model_current,seuil_current,step_model_never,seuil_never){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "current"
is_current <- predict_current(data,step_model_current,seuil_current) == 1
predictions[is_current] <- "current"
# Étape 3 : Prédictions pour "never" parmi les non-classés
remaining <- is.na(predictions)
is_never <- predict_never(data[remaining, ],step_model_never,seuil_never) == 1
predictions[which(remaining)[is_never]] <- "never"
# Étape 4 : Tout le reste est "former"
predictions[is.na(predictions)] <- "former"
return(predictions)
}
# Current_never
hyperparametrage_current_never<- function(data, list_modeles_current, list_seuil_current, list_modeles_never, list_seuil_never){
best_accuracy <- 0
best_seuil_current <- 0
best_seuil_never <- 0
best_num_model_current <- 1
best_num_model_never <- 1
nb <- length(list_modeles_current)*length(list_seuil_current)*length(list_modeles_never)*length(list_seuil_never)
i <- 0
num_model_current <- 1
num_model_never <- 1
for(step_model_current in list_modeles_current){
num_model_current <- num_model_current +1
for(seuil_current in list_seuil_current){
for(step_model_never in list_modeles_never){
num_model_never <- num_model_never +1
for(seuil_never in list_seuil_never){
i <- i+1
if(i%%100 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_current_never(data,step_model_current,seuil_current,step_model_never,seuil_never), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_current <- num_model_current
best_num_model_never <- num_model_never
best_seuil_current <- seuil_current
best_seuil_never <- seuil_never
}
}
}
num_model_never <- 1
}
}
return(c(best_accuracy,best_num_model_current,best_seuil_current,best_num_model_never,best_seuil_never))
}
hyperparametrage_current_never(data_train2,modeles_current,list(0.45,0.475,0.5,0525,0.55),modeles_never,list(0.45,0.475,0.5,0525,0.55))
# Current puis never
predict_current_never<- function(data,step_model_current,seuil_current,step_model_never,seuil_never){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "current"
is_current <- predict_current(data,step_model_current,seuil_current) == 1
predictions[is_current] <- "current"
# Étape 3 : Prédictions pour "never" parmi les non-classés
remaining <- is.na(predictions)
is_never <- predict_never(data[remaining, ],step_model_never,seuil_never) == 1
predictions[which(remaining)[is_never]] <- "never"
# Étape 4 : Tout le reste est "former"
predictions[is.na(predictions)] <- "former"
return(predictions)
}
# Current_never
hyperparametrage_current_never<- function(data, list_modeles_current, list_seuil_current, list_modeles_never, list_seuil_never){
best_accuracy <- 0
best_seuil_current <- 0
best_seuil_never <- 0
best_num_model_current <- 1
best_num_model_never <- 1
nb <- length(list_modeles_current)*length(list_seuil_current)*length(list_modeles_never)*length(list_seuil_never)
i <- 0
num_model_current <- 1
num_model_never <- 1
for(step_model_current in list_modeles_current){
num_model_current <- num_model_current +1
for(seuil_current in list_seuil_current){
for(step_model_never in list_modeles_never){
num_model_never <- num_model_never +1
for(seuil_never in list_seuil_never){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_current_never(data,step_model_current,seuil_current,step_model_never,seuil_never), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_current <- num_model_current
best_num_model_never <- num_model_never
best_seuil_current <- seuil_current
best_seuil_never <- seuil_never
}
}
}
num_model_never <- 1
}
}
return(c(best_accuracy,best_num_model_current,best_seuil_current,best_num_model_never,best_seuil_never))
}
print("CURRENT NEVER")
hyperparametrage_current_never(data_train2,modeles_current,list(0.45,0.475,0.5,0525,0.55),modeles_never,list(0.45,0.475,0.5,0525,0.55))
# Current former
predict_current_former<- function(data,step_model_current,seuil_current,step_model_former,seuil_former){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "current"
is_current <- predict_current(data,step_model_current,seuil_current) == 1
predictions[is_current] <- "current"
# Étape 3 : Prédictions pour "former" parmi les non-classés
remaining <- is.na(predictions)
is_former <- predict_former(data[remaining, ],step_model_former,seuil_former) == 1
predictions[which(remaining)[is_former]] <- "former"
# Étape 4 : Tout le reste est "former"
predictions[is.na(predictions)] <- "former"
return(predictions)
}
# Current_former
hyperparametrage_current_former<- function(data, list_modeles_current, list_seuil_current, list_modeles_former, list_seuil_former){
best_accuracy <- 0
best_seuil_current <- 0
best_seuil_former <- 0
best_num_model_current <- 1
best_num_model_former <- 1
nb <- length(list_modeles_current)*length(list_seuil_current)*length(list_modeles_former)*length(list_seuil_former)
i <- 0
num_model_current <- 1
num_model_former <- 1
for(step_model_current in list_modeles_current){
num_model_current <- num_model_current +1
for(seuil_current in list_seuil_current){
for(step_model_former in list_modeles_former){
num_model_former <- num_model_former +1
for(seuil_former in list_seuil_former){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_current_former(data,step_model_current,seuil_current,step_model_former,seuil_former), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_current <- num_model_current
best_num_model_former <- num_model_former
best_seuil_current <- seuil_current
best_seuil_former <- seuil_former
}
}
}
num_model_former <- 1
}
}
return(c(best_accuracy,best_num_model_current,best_seuil_current,best_num_model_former,best_seuil_former))
}
print("CURRENT FORMER")
hyperparametrage_current_former(data_train2,modeles_current,list(0.45,0.475,0.5,0525,0.55),modeles_former,list(0.45,0.475,0.5,0525,0.55))
# Never current
predict_never_current<- function(data,step_model_never,seuil_never,step_model_current,seuil_current){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "never"
is_never <- predict_never(data,step_model_never,seuil_never) == 1
predictions[is_never] <- "never"
# Étape 3 : Prédictions pour "current" parmi les non-classés
remaining <- is.na(predictions)
is_current <- predict_current(data[remaining, ],step_model_current,seuil_current) == 1
predictions[which(remaining)[is_current]] <- "current"
# Étape 4 : Tout le reste est "current"
predictions[is.na(predictions)] <- "current"
return(predictions)
}
# never_current
hyperparametrage_never_current<- function(data, list_modeles_never, list_seuil_never, list_modeles_current, list_seuil_current){
best_accuracy <- 0
best_seuil_never <- 0
best_seuil_current <- 0
best_num_model_never <- 1
best_num_model_current <- 1
nb <- length(list_modeles_never)*length(list_seuil_never)*length(list_modeles_current)*length(list_seuil_current)
i <- 0
num_model_never <- 1
num_model_current <- 1
for(step_model_never in list_modeles_never){
num_model_never <- num_model_never +1
for(seuil_never in list_seuil_never){
for(step_model_current in list_modeles_current){
num_model_current <- num_model_current +1
for(seuil_current in list_seuil_current){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_never_current(data,step_model_never,seuil_never,step_model_current,seuil_current), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_never <- num_model_never
best_num_model_current <- num_model_current
best_seuil_never <- seuil_never
best_seuil_current <- seuil_current
}
}
}
num_model_current <- 1
}
}
return(c(best_accuracy,best_num_model_never,best_seuil_never,best_num_model_current,best_seuil_current))
}
print("NEVER CURRENT")
hyperparametrage_never_current(data_train2,modeles_never,list(0.45,0.475,0.5,0525,0.55),modeles_current,list(0.45,0.475,0.5,0525,0.55))
# Never former
predict_never_former<- function(data,step_model_never,seuil_never,step_model_former,seuil_former){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "never"
is_never <- predict_never(data,step_model_never,seuil_never) == 1
predictions[is_never] <- "never"
# Étape 3 : Prédictions pour "former" parmi les non-classés
remaining <- is.na(predictions)
is_former <- predict_former(data[remaining, ],step_model_former,seuil_former) == 1
predictions[which(remaining)[is_former]] <- "former"
# Étape 4 : Tout le reste est "former"
predictions[is.na(predictions)] <- "former"
return(predictions)
}
# never_former
hyperparametrage_never_former<- function(data, list_modeles_never, list_seuil_never, list_modeles_former, list_seuil_former){
best_accuracy <- 0
best_seuil_never <- 0
best_seuil_former <- 0
best_num_model_never <- 1
best_num_model_former <- 1
nb <- length(list_modeles_never)*length(list_seuil_never)*length(list_modeles_former)*length(list_seuil_former)
i <- 0
num_model_never <- 1
num_model_former <- 1
for(step_model_never in list_modeles_never){
num_model_never <- num_model_never +1
for(seuil_never in list_seuil_never){
for(step_model_former in list_modeles_former){
num_model_former <- num_model_former +1
for(seuil_former in list_seuil_former){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_never_former(data,step_model_never,seuil_never,step_model_former,seuil_former), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_never <- num_model_never
best_num_model_former <- num_model_former
best_seuil_never <- seuil_never
best_seuil_former <- seuil_former
}
}
}
num_model_former <- 1
}
}
return(c(best_accuracy,best_num_model_never,best_seuil_never,best_num_model_former,best_seuil_former))
}
print("NEVER FORMER")
hyperparametrage_never_former(data_train2,modeles_never,list(0.45,0.475,0.5,0525,0.55),modeles_former,list(0.45,0.475,0.5,0525,0.55))
# Former current
predict_former_current<- function(data,step_model_former,seuil_former,step_model_current,seuil_current){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "former"
is_former <- predict_former(data,step_model_former,seuil_former) == 1
predictions[is_former] <- "former"
# Étape 3 : Prédictions pour "current" parmi les non-classés
remaining <- is.na(predictions)
is_current <- predict_current(data[remaining, ],step_model_current,seuil_current) == 1
predictions[which(remaining)[is_current]] <- "current"
# Étape 4 : Tout le reste est "current"
predictions[is.na(predictions)] <- "current"
return(predictions)
}
# former_current
hyperparametrage_former_current<- function(data, list_modeles_former, list_seuil_former, list_modeles_current, list_seuil_current){
best_accuracy <- 0
best_seuil_former <- 0
best_seuil_current <- 0
best_num_model_former <- 1
best_num_model_current <- 1
nb <- length(list_modeles_former)*length(list_seuil_former)*length(list_modeles_current)*length(list_seuil_current)
i <- 0
num_model_former <- 1
num_model_current <- 1
for(step_model_former in list_modeles_former){
num_model_former <- num_model_former +1
for(seuil_former in list_seuil_former){
for(step_model_current in list_modeles_current){
num_model_current <- num_model_current +1
for(seuil_current in list_seuil_current){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_former_current(data,step_model_former,seuil_former,step_model_current,seuil_current), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_former <- num_model_former
best_num_model_current <- num_model_current
best_seuil_former <- seuil_former
best_seuil_current <- seuil_current
}
}
}
num_model_current <- 1
}
}
return(c(best_accuracy,best_num_model_former,best_seuil_former,best_num_model_current,best_seuil_current))
}
print("FORMER CURRENT")
hyperparametrage_former_current(data_train2,modeles_former,list(0.45,0.475,0.5,0525,0.55),modeles_current,list(0.45,0.475,0.5,0525,0.55))
# Former never
predict_former_never<- function(data,step_model_former,seuil_former,step_model_never,seuil_never){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "former"
is_former <- predict_former(data,step_model_former,seuil_former) == 1
predictions[is_former] <- "former"
# Étape 3 : Prédictions pour "never" parmi les non-classés
remaining <- is.na(predictions)
is_never <- predict_never(data[remaining, ],step_model_never,seuil_never) == 1
predictions[which(remaining)[is_never]] <- "never"
# Étape 4 : Tout le reste est "never"
predictions[is.na(predictions)] <- "never"
return(predictions)
}
# former_never
hyperparametrage_former_never<- function(data, list_modeles_former, list_seuil_former, list_modeles_never, list_seuil_never){
best_accuracy <- 0
best_seuil_former <- 0
best_seuil_never <- 0
best_num_model_former <- 1
best_num_model_never <- 1
nb <- length(list_modeles_former)*length(list_seuil_former)*length(list_modeles_never)*length(list_seuil_never)
i <- 0
num_model_former <- 1
num_model_never <- 1
for(step_model_former in list_modeles_former){
num_model_former <- num_model_former +1
for(seuil_former in list_seuil_former){
for(step_model_never in list_modeles_never){
num_model_never <- num_model_never +1
for(seuil_never in list_seuil_never){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_former_never(data,step_model_former,seuil_former,step_model_never,seuil_never), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_former <- num_model_former
best_num_model_never <- num_model_never
best_seuil_former <- seuil_former
best_seuil_never <- seuil_never
}
}
}
num_model_never <- 1
}
}
return(c(best_accuracy,best_num_model_former,best_seuil_former,best_num_model_never,best_seuil_never))
}
print("FORMER_NEVER")
hyperparametrage_former_never(data_train2,modeles_former,list(0.45,0.475,0.5,0525,0.55),modeles_never,list(0.45,0.475,0.5,0525,0.55))
# Current puis never
predict_current_never<- function(data,step_model_current,seuil_current,step_model_never,seuil_never){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "current"
is_current <- predict_current(data,step_model_current,seuil_current) == 1
predictions[is_current] <- "current"
# Étape 3 : Prédictions pour "never" parmi les non-classés
remaining <- is.na(predictions)
is_never <- predict_never(data[remaining, ],step_model_never,seuil_never) == 1
predictions[which(remaining)[is_never]] <- "never"
# Étape 4 : Tout le reste est "former"
predictions[is.na(predictions)] <- "former"
return(predictions)
}
# Current_never
hyperparametrage_current_never<- function(data, list_modeles_current, list_seuil_current, list_modeles_never, list_seuil_never){
best_accuracy <- 0
best_seuil_current <- 0
best_seuil_never <- 0
best_num_model_current <- 1
best_num_model_never <- 1
nb <- length(list_modeles_current)*length(list_seuil_current)*length(list_modeles_never)*length(list_seuil_never)
i <- 0
num_model_current <- 1
num_model_never <- 1
for(step_model_current in list_modeles_current){
num_model_current <- num_model_current +1
for(seuil_current in list_seuil_current){
for(step_model_never in list_modeles_never){
num_model_never <- num_model_never +1
for(seuil_never in list_seuil_never){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_current_never(data,step_model_current,seuil_current,step_model_never,seuil_never), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_current <- num_model_current
best_num_model_never <- num_model_never
best_seuil_current <- seuil_current
best_seuil_never <- seuil_never
}
}
}
num_model_never <- 1
}
}
return(c(best_accuracy,best_num_model_current,best_seuil_current,best_num_model_never,best_seuil_never))
}
print("CURRENT NEVER")
hyperparametrage_current_never(data_train2,modeles_current,list(0.45,0.475,0.5,0.525,0.55),modeles_never,list(0.45,0.475,0.5,0.525,0.55))
# Current former
predict_current_former<- function(data,step_model_current,seuil_current,step_model_former,seuil_former){
# Étape 1 : Initialisation du vecteur de prédictions
n <- nrow(data)
predictions <- rep(NA, times=n)
# Étape 2 : Prédictions pour "current"
is_current <- predict_current(data,step_model_current,seuil_current) == 1
predictions[is_current] <- "current"
# Étape 3 : Prédictions pour "former" parmi les non-classés
remaining <- is.na(predictions)
is_former <- predict_former(data[remaining, ],step_model_former,seuil_former) == 1
predictions[which(remaining)[is_former]] <- "former"
# Étape 4 : Tout le reste est "former"
predictions[is.na(predictions)] <- "former"
return(predictions)
}
# Current_former
hyperparametrage_current_former<- function(data, list_modeles_current, list_seuil_current, list_modeles_former, list_seuil_former){
best_accuracy <- 0
best_seuil_current <- 0
best_seuil_former <- 0
best_num_model_current <- 1
best_num_model_former <- 1
nb <- length(list_modeles_current)*length(list_seuil_current)*length(list_modeles_former)*length(list_seuil_former)
i <- 0
num_model_current <- 1
num_model_former <- 1
for(step_model_current in list_modeles_current){
num_model_current <- num_model_current +1
for(seuil_current in list_seuil_current){
for(step_model_former in list_modeles_former){
num_model_former <- num_model_former +1
for(seuil_former in list_seuil_former){
i <- i+1
if(i%%800 == 0){
print(paste0(i,"/",nb))
}
confusion_matrix <- table(Predicted = predict_current_former(data,step_model_current,seuil_current,step_model_former,seuil_former), Actual = data$smoking_status)
accuracy <- sum(diag(confusion_matrix)) / sum(confusion_matrix)
if(accuracy > best_accuracy){
best_accuracy <- accuracy
best_num_model_current <- num_model_current
best_num_model_former <- num_model_former
best_seuil_current <- seuil_current
best_seuil_former <- seuil_former
}
}
}
num_model_former <- 1
}
}
return(c(best_accuracy,best_num_model_current,best_seuil_current,best_num_model_former,best_seuil_former))
}
print("CURRENT FORMER")
hyperparametrage_current_former(data_train2,modeles_current,list(0.45,0.475,0.5,0.525,0.55),modeles_former,list(0.45,0.475,0.5,0.525,0.55))
